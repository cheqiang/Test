package com.file.db;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;

/**
 * TODO:Responsibility description of this class.
 *
 * @author cheqiang
 * @version 1.0
 * @since 2019/10/26 15:27
 */
public class DerByConnection {

    private static final String classDriver = "org.apache.derby.jdbc.EmbeddedDriver";

    private static final String url = "jdbc:derby:D:/derby-demo;create=true";

    private static final String user = "";

    private static final String password = "";

    private static Connection connection;

    /**
     * 初始化数据
     */
    static {
        //加载嵌入式derby的JDBC驱动类
        try {
            Class.forName(classDriver);
            connection = DriverManager.getConnection(url,user,password);
            System.out.println(connection);
            init();
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    /**
     * 初始化表
     * @throws SQLException
     */
    private static void init() throws SQLException {
        //创建表
        Statement sm=connection.createStatement();
        try{
            boolean execute = sm.execute("create table file(\n" +
                    "   ID  INTEGER NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1),\n" +
                    "   uuid VARCHAR(100),\n" +
                    "   size INTEGER,\n" +
                    "   type VARCHAR(20),\n" +
                    "   name VARCHAR(100),\n" +
                    "   old_name VARCHAR(100),\n" +
                    "   create_time TIMESTAMP,\n" +
                    "   path VARCHAR(100),\n" +
                    "   constraint PK_FILE primary key (ID)\n" +
                    ")");
            if(execute){
                System.out.println("初始化数据成功！");
            }
        }catch (SQLException e){
            System.out.println(e.getMessage());
        }
    }

    /**
     * 获得数据库连接
     * @return
     */
    public static Connection getConnection(){
        return connection;
    }

}
